apiVersion: install.verrazzano.io/v1beta1
kind: Verrazzano
metadata:
  name: admin
spec:
  profile: ${profile}
  environmentName: ${environment}
  components:
    argoCD:
      enabled: ${argocd}
    clusterAPI:
      enabled: ${cluster_api}
    clusterOperator:
      overrides:
      - values:
          syncClusters:
            enabled: true
            clusterSelector:
              matchExpressions:
              - key: vz
                operator: In
                values: [oci]
    coherenceOperator:
      enabled: ${coherence}
    console:
      enabled: false
    dns:
      wildcard:
        domain: nip.io
    fluentd:
      enabled: ${fluentd}
    grafana:
      enabled: ${grafana}        
    ingressNGINX:
      type: LoadBalancer
      overrides:
      - values:
          controller:
            service:
              annotations:
                service.beta.kubernetes.io/oci-load-balancer-internal: "${control_plane}"
                service.beta.kubernetes.io/oci-load-balancer-shape: "${lb_shape}"
                service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "${flex_min}"
                service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "${flex_max}"
                service.beta.kubernetes.io/oci-load-balancer-security-list-management-mode: "None"
                oci.oraclecloud.com/oci-network-security-groups: "${control_plane_nsg}"
    istio:
      overrides:
      - values:
          apiVersion: install.istio.io/v1alpha1
          kind: IstioOperator
          spec:
            values:
              global:
                meshID: ${mesh_id}
                multiCluster:
                  clusterName: ${cluster}
                network: ${mesh_network}
            components:
              egressGateways:
                - name: istio-egressgateway
                  enabled: true
              ingressGateways:
                - name: istio-ingressgateway
                  enabled: true
                  k8s:
                    serviceAnnotations:
                      service.beta.kubernetes.io/oci-load-balancer-internal: "${data_plane}"                    
                      service.beta.kubernetes.io/oci-load-balancer-shape: "${lb_shape}"
                      service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "${flex_min}"
                      service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "${flex_max}"
                      service.beta.kubernetes.io/oci-load-balancer-security-list-management-mode: "None"
                      oci.oraclecloud.com/oci-network-security-groups: "${data_plane_nsg}"
    jaegerOperator:
      enabled: ${jaeger}
    kiali:
      enabled: ${kiali}
    kubeStateMetrics:
      enabled: ${kube_state_metrics}                          
    opensearch:
      enabled: ${opensearch}
    opensearchDashboards:
      enabled: ${opensearch_dashboards}
    prometheus:
      enabled: ${prometheus}
    prometheusOperator:
      enabled: ${prometheus_operator}
      overrides:
      - values:
          prometheus:
            thanos:
              integration: sidecar
            prometheusSpec:
              thanos:
                objectStorageConfig:
                  name: objstore-config
                  key: objstore.yml
    thanos:
      enabled: ${thanos_enabled}
      overrides:
      - values:
          existingObjstoreSecret: objstore-config
          storagegateway:
            enabled: ${storage_gateway}
    rancher:
      enabled: ${rancher}
    velero:
      enabled: ${velero}
    weblogicOperator:
      enabled: ${weblogic_operator}